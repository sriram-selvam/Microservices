spring.application.name=EMployeeApp
server.servlet.context-path=/employee-api/
server.port: 8080
spring.datasource.url=jdbc:mysql://localhost:3306/application
spring.datasource.username=root
spring.datasource.password=root
addressService.base.url=http://localhost:8081/address-api/
eureka.instance.lease-renewal-interval-in-seconds=90


management.endpoints.web.exposure.include=*
management.info.env.enabled=true
info.app.name= employeee app developed in december 2024
info.app.description= description will be updated 
info.app.version=2.0.9
 management.endpoint.health.show-details=always
 management.endpoints.web.base-path=/actuator

#http://localhost:8080/employee-api/employee/employees/4
#http://localhost:8081/address-api/Address/addressByid/3



# wee can see the heartbeat information in  http://localhost:8761/eureka/apps
#were used to get the updated instances information from discovery services	 http://localhost:8761/eureka/apps/delta 
#121199*199*199


#public employeeResponse getEmployee(int id)
#	{
#		employeeEntity entity= empRepo.findById(id).get();
#		employeeResponse empRes= new employeeResponse();
#		
#		BeanUtils.copyProperties(entity, empRes);
#		
#		  addressResponse addr = webcli
#				  .get()
#				  .uri(baseUrl+"/Address/addressByid/"+id)
#				  .retrieve()
#				  .bodyToMono(addressResponse.class)
#				  .block(); 
#//				  restTemp.getForObject(baseUrl+"/Address/addressByid/{id}", addressResponse.class, id);
#		  empRes.setAddrespose(addr);
#//		BeanUtils is used to copy all obj from one to another
#//
#//	
#//	empRes.setId(entity.getId());
#//	empRes.setEmail(entity.getEmail());
#//	empRes.setName(entity.getName());
#//	empRes.setBloodGroup(entity.getBloodGroup());
#	
#	return empRes;
#	}
#}
